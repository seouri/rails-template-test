version: 2
jobs:
  build:
    parallelism: 1

    docker:
      - image: circleci/ruby:2.5.1-node-browsers
      - image: circleci/postgres:9.6.9-alpine-ram

    environment:
      RAILS_ENV: "test"
      PGHOST: "localhost"
      PGUSER: "postgres"

    steps:

      - checkout

      - restore_cache:
          keys:
          - gem-cache-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
          - gem-cache-{{ checksum "Gemfile.lock" }}
          - gem-cache

      # For rugged gem (pronto gem dependency)
      - run: sudo apt-get install cmake

      - run:
          name: Bundle Install
          command: bundle check --path=vendor/bundle || bundle install --path=vendor/bundle --jobs=4 --retry=3

      - run:
          name: Ruby Audit
          command: bundle exec ruby-audit check

      - run:
          name: Bundle Audit
          command: bundle exec bundle-audit check --update

      - run:
          name: Brakeman
          command: bundle exec brakeman

      - run:
          name: Rubocop
          command: bundle exec rubocop

      # Store bundle cache
      - save_cache:
          key: gem-cache-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - save_cache:
          key: gem-cache-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - save_cache:
          key: gem-cache
          paths:
            - vendor/bundle

      - run:
          name: Set up DB
          command: bundle exec rails db:setup

      - run:
          name: Rails Test
          command: bundle exec rake test

      - store_test_results:
          path: test/reports
          destination: test-results/rails

      - store_artifacts:
          path: test/reports
          destination: test-results/MiniTest

      - store_artifacts:
          path: coverage
          destination: coverage
